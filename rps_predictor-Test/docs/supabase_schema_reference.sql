-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ai_states (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  stats_profile_id uuid NOT NULL,
  model_version integer NOT NULL CHECK (model_version >= 0),
  rounds_seen integer NOT NULL DEFAULT 0,
  state jsonb NOT NULL,
  needs_rebuild boolean NOT NULL DEFAULT false,
  last_round_id uuid,
  version integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT ai_states_pkey PRIMARY KEY (id),
  CONSTRAINT ai_states_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT ai_states_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id),
  CONSTRAINT ai_states_last_round_id_fkey FOREIGN KEY (last_round_id) REFERENCES public.rounds(id)
);
CREATE TABLE public.demographics_profiles (
  user_id uuid NOT NULL DEFAULT gen_random_uuid(),
  username text,
  first_name text,
  last_initial text,
  grade text,
  school text,
  created_at timestamp with time zone,
  age text,
  prior_experience text,
  training_completed boolean NOT NULL DEFAULT false,
  training_count integer NOT NULL DEFAULT 0,
  storage_mode USER-DEFINED NOT NULL DEFAULT 'local'::storage_mode_type,
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  preferences jsonb NOT NULL DEFAULT '{}'::jsonb,
  consent_version text,
  consent_granted_at timestamp with time zone,
  last_promoted_at timestamp with time zone,
  CONSTRAINT demographics_profiles_pkey PRIMARY KEY (user_id),
  CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.dev_audit_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  recorded_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  action text NOT NULL,
  actor text,
  target text,
  notes text,
  payload jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT dev_audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT dev_audit_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.dev_dataset_snapshots (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  data jsonb NOT NULL,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT dev_dataset_snapshots_pkey PRIMARY KEY (id),
  CONSTRAINT dev_dataset_snapshots_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.device_shadows (
  device_id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  last_local_sync_at timestamp with time zone,
  promoted_at timestamp with time zone,
  storage_mode USER-DEFINED NOT NULL DEFAULT 'local'::storage_mode_type,
  payload jsonb NOT NULL DEFAULT '{}'::jsonb,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  needs_merge boolean NOT NULL DEFAULT false,
  CONSTRAINT device_shadows_pkey PRIMARY KEY (device_id),
  CONSTRAINT device_shadows_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.export_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  session_id uuid,
  stats_profile_id uuid,
  event_type USER-DEFINED NOT NULL,
  occurred_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT export_events_pkey PRIMARY KEY (id),
  CONSTRAINT export_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT export_events_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id),
  CONSTRAINT export_events_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id)
);
CREATE TABLE public.instrumentation_snapshots (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  stats_profile_id uuid,
  session_id uuid,
  scope jsonb NOT NULL,
  scope_key text DEFAULT ((COALESCE((scope ->> 'playerId'::text), '__anon'::text) || '::'::text) || COALESCE((scope ->> 'profileId'::text), '__all'::text)),
  trigger USER-DEFINED NOT NULL,
  captured_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  snapshot jsonb NOT NULL,
  notes text,
  pinned boolean NOT NULL DEFAULT false,
  version integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT instrumentation_snapshots_pkey PRIMARY KEY (id),
  CONSTRAINT instrumentation_snapshots_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT instrumentation_snapshots_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id),
  CONSTRAINT instrumentation_snapshots_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id)
);
CREATE TABLE public.lifecycle_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  session_id uuid,
  stats_profile_id uuid,
  event_type USER-DEFINED NOT NULL,
  occurred_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT lifecycle_events_pkey PRIMARY KEY (id),
  CONSTRAINT lifecycle_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT lifecycle_events_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id),
  CONSTRAINT lifecycle_events_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id)
);
CREATE TABLE public.matches (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  session_id uuid NOT NULL,
  stats_profile_id uuid NOT NULL,
  client_match_id text,
  started_at timestamp with time zone NOT NULL,
  ended_at timestamp with time zone,
  mode USER-DEFINED NOT NULL,
  difficulty USER-DEFINED NOT NULL,
  best_of smallint NOT NULL CHECK (best_of = ANY (ARRAY[3, 5, 7])),
  rounds_played integer NOT NULL DEFAULT 0,
  score_you integer NOT NULL DEFAULT 0,
  score_ai integer NOT NULL DEFAULT 0,
  ai_win_rate numeric,
  you_switched_rate numeric,
  leaderboard_score integer,
  leaderboard_max_streak integer,
  leaderboard_round_count integer,
  leaderboard_timer_bonus integer,
  leaderboard_beat_confidence_bonus integer,
  leaderboard_type text,
  notes text,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  version integer NOT NULL DEFAULT 1,
  CONSTRAINT matches_pkey PRIMARY KEY (id),
  CONSTRAINT matches_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT matches_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id),
  CONSTRAINT matches_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id)
);
CREATE TABLE public.promotion_runs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  device_id uuid,
  started_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  completed_at timestamp with time zone,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'succeeded'::text, 'failed'::text])),
  total_rounds integer,
  total_matches integer,
  total_profiles integer,
  notes text,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT promotion_runs_pkey PRIMARY KEY (id),
  CONSTRAINT promotion_runs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT promotion_runs_device_id_fkey FOREIGN KEY (device_id) REFERENCES public.device_shadows(device_id)
);
CREATE TABLE public.rounds (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  session_id uuid NOT NULL,
  stats_profile_id uuid NOT NULL,
  match_id uuid,
  client_round_id text,
  round_number integer NOT NULL CHECK (round_number > 0),
  played_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  mode USER-DEFINED NOT NULL,
  difficulty USER-DEFINED NOT NULL,
  best_of smallint NOT NULL CHECK (best_of = ANY (ARRAY[3, 5, 7])),
  player_move USER-DEFINED NOT NULL,
  ai_move USER-DEFINED NOT NULL,
  predicted_player_move USER-DEFINED,
  outcome USER-DEFINED NOT NULL,
  decision_policy USER-DEFINED NOT NULL,
  reason text,
  ai_confidence double precision,
  confidence_bucket USER-DEFINED,
  decision_time_ms integer,
  response_time_ms integer,
  response_speed_ms integer,
  inter_round_delay_ms integer,
  ready_at timestamp with time zone,
  first_interaction_at timestamp with time zone,
  move_selected_at timestamp with time zone,
  completed_at timestamp with time zone,
  interactions integer,
  clicks integer,
  streak_ai integer,
  streak_you integer,
  ai_state jsonb,
  mixer_trace jsonb,
  heuristic_trace jsonb,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  version integer NOT NULL DEFAULT 1,
  CONSTRAINT rounds_pkey PRIMARY KEY (id),
  CONSTRAINT rounds_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT rounds_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id),
  CONSTRAINT rounds_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id),
  CONSTRAINT rounds_match_id_fkey FOREIGN KEY (match_id) REFERENCES public.matches(id)
);
CREATE TABLE public.sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  demographics_profile_id uuid,
  primary_stats_profile_id uuid,
  device_id uuid,
  client_session_id text,
  storage_mode USER-DEFINED NOT NULL DEFAULT 'local'::storage_mode_type,
  started_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  ended_at timestamp with time zone,
  last_event_at timestamp with time zone,
  session_label text,
  client_version text,
  locale text,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  version integer NOT NULL DEFAULT 1,
  CONSTRAINT sessions_pkey PRIMARY KEY (id),
  CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT sessions_demographics_profile_id_fkey FOREIGN KEY (demographics_profile_id) REFERENCES public.demographics_profiles(user_id),
  CONSTRAINT sessions_primary_stats_profile_id_fkey FOREIGN KEY (primary_stats_profile_id) REFERENCES public.stats_profiles(id)
);
CREATE TABLE public.settings_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  session_id uuid,
  stats_profile_id uuid,
  setting_key text NOT NULL,
  old_value jsonb,
  new_value jsonb,
  source text,
  occurred_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT settings_events_pkey PRIMARY KEY (id),
  CONSTRAINT settings_events_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id),
  CONSTRAINT settings_events_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id),
  CONSTRAINT settings_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.stats_counters (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  stats_profile_id uuid NOT NULL,
  key text NOT NULL CHECK (length(TRIM(BOTH FROM key)) > 0),
  value_numeric double precision,
  value_integer bigint,
  value_text text,
  value_json jsonb,
  sample_count integer,
  last_calculated_at timestamp with time zone,
  last_round_id uuid,
  version integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT stats_counters_pkey PRIMARY KEY (id),
  CONSTRAINT stats_counters_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT stats_counters_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id),
  CONSTRAINT stats_counters_last_round_id_fkey FOREIGN KEY (last_round_id) REFERENCES public.rounds(id)
);
CREATE TABLE public.stats_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  demographics_profile_id uuid,
  base_name text NOT NULL,
  profile_version integer NOT NULL DEFAULT 1 CHECK (profile_version > 0),
  display_name text NOT NULL,
  training_count integer NOT NULL DEFAULT 0,
  training_completed boolean NOT NULL DEFAULT false,
  predictor_default boolean NOT NULL DEFAULT false,
  seen_post_training_cta boolean NOT NULL DEFAULT false,
  previous_profile_id uuid,
  next_profile_id uuid,
  archived boolean NOT NULL DEFAULT false,
  metadata jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  version integer NOT NULL DEFAULT 1 CHECK (version > 0),
  CONSTRAINT stats_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT stats_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT stats_profiles_demographics_profile_id_fkey FOREIGN KEY (demographics_profile_id) REFERENCES public.demographics_profiles(user_id),
  CONSTRAINT stats_profiles_previous_profile_id_fkey FOREIGN KEY (previous_profile_id) REFERENCES public.stats_profiles(id),
  CONSTRAINT stats_profiles_next_profile_id_fkey FOREIGN KEY (next_profile_id) REFERENCES public.stats_profiles(id)
);
CREATE TABLE public.user_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  stats_profile_id uuid,
  session_id uuid,
  scope USER-DEFINED NOT NULL DEFAULT 'global'::settings_scope_type,
  key text NOT NULL CHECK (length(TRIM(BOTH FROM key)) > 0),
  value jsonb NOT NULL,
  version integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  profile_scope_id uuid DEFAULT COALESCE(stats_profile_id, '00000000-0000-0000-0000-000000000000'::uuid),
  session_scope_id uuid DEFAULT COALESCE(session_id, '00000000-0000-0000-0000-000000000000'::uuid),
  CONSTRAINT user_settings_pkey PRIMARY KEY (id),
  CONSTRAINT user_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_settings_stats_profile_id_fkey FOREIGN KEY (stats_profile_id) REFERENCES public.stats_profiles(id),
  CONSTRAINT user_settings_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id)
);
